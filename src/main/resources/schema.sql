CREATE TABLE IF NOT EXISTS rating (
	rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	rating_name VARCHAR_IGNORECASE,
	CONSTRAINT rating_pk PRIMARY KEY (rating_id)
);

CREATE TABLE IF NOT EXISTS film (
	film_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR_IGNORECASE NOT NULL,
	description VARCHAR_IGNORECASE,
	release_date DATE NOT NULL,
	duration_min INTEGER NOT NULL,
	rating_id INTEGER NOT NULL,
	likes INTEGER,
	CONSTRAINT film_pk PRIMARY KEY (film_id),
	CONSTRAINT film_fk_1 FOREIGN KEY (rating_id) REFERENCES rating(rating_id)
);

CREATE TABLE IF NOT EXISTS genre (
	genre_id INTEGER NOT NULL AUTO_INCREMENT,
	genre_name VARCHAR_IGNORECASE,
	CONSTRAINT genre_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
	param_id INTEGER NOT NULL AUTO_INCREMENT,
	film_id INTEGER NOT NULL,
	genre_id INTEGER NOT NULL,
	CONSTRAINT film_genre_pk PRIMARY KEY (param_id),
	CONSTRAINT film_genre_fk FOREIGN KEY (film_id) REFERENCES film(film_id),
	CONSTRAINT film_genre_fk_1 FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);

CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER NOT NULL AUTO_INCREMENT,
	login VARCHAR_IGNORECASE NOT NULL,
	name VARCHAR_IGNORECASE NOT NULL,
	email VARCHAR_IGNORECASE NOT NULL,
	birthday_date DATE NOT NULL,
	CONSTRAINT user_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
	like_id INTEGER NOT NULL AUTO_INCREMENT,
	film_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	CONSTRAINT FILM_LIKES_PK PRIMARY KEY (like_id),
	CONSTRAINT FILM_LIKES_FK FOREIGN KEY (film_id) REFERENCES film(film_id),
	CONSTRAINT FILM_LIKES_FK_1 FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS friend_status (
    friend_status_id INTEGER,
	status VARCHAR_IGNORECASE,
	CONSTRAINT FRIEND_STATUS_PK PRIMARY KEY (friend_status_id)
);

CREATE TABLE IF NOT EXISTS user_friends (
	is_friend_id INTEGER NOT NULL AUTO_INCREMENT,
	user_id INTEGER NOT NULL,
	friend_id INTEGER NOT NULL,
	friend_status_id INTEGER NOT NULL,
	CONSTRAINT USER_FRIENDS_PK PRIMARY KEY (is_friend_id),
	CONSTRAINT USER_FRIENDS_FK FOREIGN KEY (user_id) REFERENCES users(user_id),
	CONSTRAINT USER_FRIENDS_FK_1 FOREIGN KEY (friend_id) REFERENCES users(user_id),
	CONSTRAINT USER_FRIENDS_FK_2 FOREIGN KEY (friend_status_id) REFERENCES friend_status(friend_status_id)
);




